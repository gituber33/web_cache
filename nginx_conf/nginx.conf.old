events {
    worker_connections 1024;  # Nombre maximal de connexions simultanées par worker
}
http {
    # Définition de la zone de cache en mémoire (zone partagée entre les workers Nginx)
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=flask_cache:10m max_size=100m inactive=60m use_temp_path=off;

    server {
        listen 8080;
        
        # Configuration du cache pour les réponses
        location /secret {
            # Adresse de l'application Flask derrière le proxy
            proxy_pass http://web:5000;
            proxy_cache_key "$scheme$request_uri";
            # Mise en cache des réponses
            proxy_cache flask_cache;
            proxy_cache_valid 200 15s;  # Cache les réponses 200 
            proxy_cache_valid 404 30s;  # Cache les réponses 404 
            proxy_cache_use_stale error timeout updating;  # Utiliser les réponses en cache même en cas d'erreur (par exemple, si Flask est temporairement hors ligne)
            add_header X-Cache-Status $upstream_cache_status;
        }
        location / {
            proxy_pass http://web:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
